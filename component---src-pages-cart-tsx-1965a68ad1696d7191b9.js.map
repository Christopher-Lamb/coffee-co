{"version":3,"file":"component---src-pages-cart-tsx-1965a68ad1696d7191b9.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/pages/cart.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { Navbar, Form, Input, BreadCrumbs, Payment, Information, Shipping, CheckoutNav, CheckChangeDisplay, OrderSummary, PortalOverlay } from \"../components\";\nimport { MdClose } from \"react-icons/md\";\nimport { getStoredCart, deleteFromCart, clearCart } from \"../utils/cartFunctions\";\nimport { Coffees } from \"../utils/coffees\";\nimport { Image } from \"../components\";\nimport { FiMinus } from \"react-icons/fi\";\nimport { IoMdAdd } from \"react-icons/io\";\nimport { useCoffeeContext } from \"../context/CoffeeContext\";\nimport { Helmet } from \"react-helmet\";\n\ninterface Item {\n  name: string;\n  quantity: number;\n  price: number;\n}\n\ninterface Coffee {\n  rating: number;\n  name: string;\n  roast: string;\n  origin: string;\n  filename: string;\n  notes: string[];\n  price: number;\n  weight: number;\n}\n\nconst capitalize = (str: string) => str.charAt(0).toUpperCase() + str.slice(1);\n\nconst shippingOptions: Record<string, number> = { \"Ground (2-6 business days)\": 0, \"3 Day Select (3 business days)\": 9, \"2nd Day Air (2-3 business days)\": 11, \"Next Day Air (2 business days)\": 21 };\n\nconst formatPrice = (num: number) => {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2, // Ensure two decimal places\n  }).format(num);\n};\n\nconst CartPage: React.FC<PageProps> = () => {\n  const [cartItems, setCartItems] = useState<Item[]>();\n  const [subtotal, setSubTotal] = useState(0);\n  const [storedFormData, setStoredFormData] = useState({ shipTo: \"\", email: \"\", shipping: \"Ground (2-6 business days)\", address: \"\" });\n  const [stepState, setStepState] = useState(\"information\");\n  const [isOrderSummary, setIsOrderSummary] = useState(false);\n  if (typeof document !== \"undefined\") document.documentElement.className = \"background\";\n\n  const { setCartAmt } = useCoffeeContext();\n\n  useEffect(() => {\n    const storedCart = getStoredCart();\n    setCartItems(storedCart);\n  }, []);\n  useEffect(() => {}, [storedFormData]);\n\n  const handleStoredFormData = (key: string, value: string) => {\n    setStoredFormData((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const handleDelete = (itemIndex: number) => {\n    const arrCopy: Item[] = JSON.parse(JSON.stringify(cartItems));\n    arrCopy.splice(itemIndex, 1);\n    setCartAmt && setCartAmt((prev) => prev - 1);\n\n    deleteFromCart(itemIndex);\n    setCartItems(arrCopy);\n    calcSubtotal(arrCopy);\n  };\n\n  const handleQuantity = (index: number, value: number) => {\n    const arrCopy: Item[] = JSON.parse(JSON.stringify(cartItems));\n    const updatedCopy = arrCopy.map((item, i) => (index === i ? { ...item, quantity: value } : item));\n    setCartItems(updatedCopy);\n    calcSubtotal(updatedCopy);\n  };\n\n  const calcSubtotal = (updatedArr?: Item[]) => {\n    const items = updatedArr || cartItems;\n    // const shipPrice = parseFloat(shippingOptions.find(({ value, price }) => storedFormData.shipping === value)?.price.replace(\"$\", \"\") || \"0\") || 0;\n    const total = items?.reduce((prev, current, index, array) => prev + array[index].price * array[index].quantity, 0) || 0;\n\n    setSubTotal(total || 0);\n  };\n\n  const handleCloseSummary = () => {\n    //Clear cart\n    clearCart();\n    setCartAmt && setCartAmt(0);\n    window.location.replace(\"/\");\n  };\n\n  const handleChangeStep = (step: string) => {\n    if (step === \"confirm\") {\n      setIsOrderSummary(true);\n    }\n    setStepState(step);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{capitalize(stepState)} | Coffee Co. Cart</title>\n      </Helmet>\n      {isOrderSummary && (\n        <PortalOverlay>\n          <OrderSummary\n            onClose={handleCloseSummary}\n            subtotal={subtotal}\n            shipping={{ value: storedFormData[\"shipping\"], price: shippingOptions[storedFormData[\"shipping\"]] }}\n            items={cartItems || []}\n            address={storedFormData.address}\n          />\n        </PortalOverlay>\n      )}\n      <main className=\"pb-three\">\n        <Navbar />\n        <div className=\"max-w-five w-full min-h-four mx-auto bg-[#f7f7f7] md:flex\">\n          <div className=\" w-full flex flex-col justify-between\">\n            <div className=\"h-full\">\n              <div className=\"px-xsmall\">\n                <div className=\"pt-small pb-2xsmall border-b-2\">\n                  <div className=\"h-med w-med mb-3xsmall\">\n                    <Image fileName=\"beansLogo.png\" />\n                  </div>\n                  <BreadCrumbs value={stepState} onChange={(value) => setStepState(value)} />\n                </div>\n              </div>\n              <div>\n                <CheckChangeDisplay stepChange={(step) => setStepState(step)} step={stepState} stored={storedFormData} />\n              </div>\n              {/* <div>{stepMap[stepState]}</div> */}\n              <Information\n                onChange={(email, shipTo, address) => {\n                  handleStoredFormData(\"email\", email);\n                  handleStoredFormData(\"shipTo\", shipTo);\n                  handleStoredFormData(\"address\", address);\n                }}\n                step={stepState}\n              />\n              <Shipping\n                onChange={(shipping) => {\n                  handleStoredFormData(\"shipping\", shipping);\n                }}\n                step={stepState}\n              />\n              <Payment step={stepState} />\n            </div>\n            <div className=\" w-full h-large\">\n              <CheckoutNav step={stepState} options={[\"information\", \"shipping\", \"payment\"]} onChangeStep={handleChangeStep} />\n            </div>\n          </div>\n          <div className=\" w-full\">\n            <div className=\" h-2/3 p-xsmall\">\n              <div className=\"border bg-white flex flex-col gap-2xsmall overflow-y-auto max-h-four h-full w-full p-2xsmall\">\n                {cartItems && cartItems?.length > 0 ? (\n                  cartItems?.map((item, index) => <CartItem key={index} onQuantityChange={handleQuantity} onDelete={handleDelete} {...item} index={index} />)\n                ) : (\n                  <div className=\"text-center text-gray-600 text-med mt-small\">No Coffee Items yet…</div>\n                )}\n              </div>\n            </div>\n            <div className=\"p-xsmall border-t-[1px]\">\n              <div className=\"flex justify-between text-2xl mt-1\">\n                <p>Subtotal</p>\n                <p>{formatPrice(subtotal)}</p>\n              </div>\n              {storedFormData.shipping && (\n                <div className=\"flex justify-between text-2xl mt-1\">\n                  <p>Shipping</p>\n                  <p>{formatPrice(shippingOptions[storedFormData.shipping])}</p>\n                </div>\n              )}\n              <div className=\"flex justify-between text-2xl mt-1\">\n                <p>Taxes</p>\n                <p>{formatPrice(subtotal * 0.06625)}</p>\n              </div>\n              <div className=\"flex justify-between text-3xl mt-2 border-t-[1px] pt-1 border-black\">\n                <p>Total</p>\n                <p>{formatPrice(shippingOptions[storedFormData.shipping] + subtotal + subtotal * 0.06625)}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </>\n  );\n};\n\ninterface CartItemProps extends Item {\n  onDelete: (delIndex: number) => void;\n  index: number;\n  onQuantityChange: (index: number, value: number) => void;\n}\n\nconst CartItem: React.FC<CartItemProps> = ({ name, quantity, price, index, onDelete, onQuantityChange }) => {\n  const [coffeeState, setCoffeeState] = useState<Coffee>();\n\n  useEffect(() => {\n    const coffee = Coffees.find((item) => item.filename === name);\n    setCoffeeState(coffee);\n  }, []);\n\n  const handeDelete = () => {\n    onDelete(index);\n  };\n\n  const handleQuantity = (value: number) => {\n    onQuantityChange(index, value);\n  };\n\n  return (\n    <div className=\"h-large w-full flex\">\n      <Image fileName={name} imgClassName=\"h-large shrink-0 w-large\" />\n      <div className=\"flex justify-between w-full\">\n        <div className=\"flex flex-col justify-center p-2xsmall\">\n          <div>\n            <span className=\"capitalize\">\n              {coffeeState?.name} | {coffeeState?.roast} | {coffeeState?.origin}\n            </span>\n          </div>\n          <div>\n            <span>{formatPrice(price * quantity || 0)}</span>\n          </div>\n        </div>\n        <div className=\"flex items-center\">\n          <Quantity onChange={handleQuantity} initialValue={quantity} />\n          <button className=\"p-2xsmall ml-xsmall\" onClick={handeDelete}>\n            <MdClose size={\"1.5rem\"} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface QuantityProps {\n  onChange: (num: number) => void;\n  initialValue: number;\n}\nconst Quantity: React.FC<QuantityProps> = ({ onChange, initialValue }) => {\n  const [num, setNum] = useState(initialValue);\n\n  useEffect(() => {\n    onChange(num);\n  }, [num]);\n\n  const handleAdd = () => {\n    const newNum = num + 1 > 10 ? 10 : num + 1;\n    setNum(newNum);\n  };\n\n  const handleSubtract = () => {\n    const newNum = num - 1 < 1 ? num : num - 1;\n    setNum(newNum);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(e.target.value);\n    setNum(1);\n    if (e.target.value === \"\") return;\n\n    let newNum = 10 >= value && value >= 1 ? value : num;\n    if (value >= 10) newNum = 10;\n    if (value <= 1) newNum = 1;\n    setNum(newNum);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-between bg-white border w-med rounded \">\n      <a onClick={handleAdd} className=\"cursor-pointer flex justify-center items-center bg-gray-200 w-full h-2xsmall\">\n        <IoMdAdd size={\"1.3rem\"} />\n      </a>\n      <input value={num} name=\"quantity\" type=\"number\" min={1} max={10} className=\"w-full h-small text-center\" onChange={handleChange} />\n      <a onClick={handleSubtract} className=\"cursor-pointer flex justify-center items-center h-2xsmall w-full bg-gray-200\">\n        <FiMinus size={\"1.3rem\"} />\n      </a>\n    </div>\n  );\n};\n\nexport default CartPage;\n\nexport const Head: HeadFC = () => <title>Cart</title>;\n"],"names":["shippingOptions","formatPrice","num","Intl","NumberFormat","style","currency","minimumFractionDigits","format","CartItem","_ref","name","quantity","price","index","onDelete","onQuantityChange","coffeeState","setCoffeeState","useState","useEffect","coffee","Coffees","find","item","filename","React","className","Image","fileName","imgClassName","roast","origin","Quantity","onChange","value","initialValue","onClick","handeDelete","MdClose","size","_ref2","setNum","handleAdd","IoMdAdd","type","min","max","e","parseInt","target","newNum","handleSubtract","FiMinus","CartPage","cartItems","setCartItems","subtotal","setSubTotal","storedFormData","setStoredFormData","shipTo","email","shipping","address","stepState","setStepState","isOrderSummary","setIsOrderSummary","document","documentElement","setCartAmt","useCoffeeContext","storedCart","getStoredCart","handleStoredFormData","key","prev","handleDelete","itemIndex","arrCopy","JSON","parse","stringify","splice","deleteFromCart","calcSubtotal","handleQuantity","updatedCopy","map","i","updatedArr","items","total","reduce","current","array","Helmet","str","charAt","toUpperCase","slice","PortalOverlay","OrderSummary","onClose","handleCloseSummary","clearCart","window","location","replace","Navbar","BreadCrumbs","CheckChangeDisplay","stepChange","step","stored","Information","Shipping","Payment","CheckoutNav","options","onChangeStep","length","Object","assign","Head"],"sourceRoot":""}